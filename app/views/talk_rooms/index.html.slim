.contain
  .talk-room-index
    .talk-room-index__sidebar
      .talk-room-index__sidebar--main
        span.tab-btn.is-show
          i(name="user" id="talk-room-user" class="fas fa-user")
          p.fukidashi 友達
        span.tab-btn
          i(name="comment" id="talk-room-comment" class="fas fa-comment-dots")
          p.fukidashi トーク
        span.tab-btn
          i(name="user-plus" id="talk-room-user-plus" class="fas fa-user-plus")
          p.fukidashi 友達追加
        span
          i(name="clock" id="talk-room-clock" class="fas fa-clock")
          p.fukidashi タイムライン
      .talk-room-index__sidebar--other
        span
          i(name="meeting" id="talk-room-meeting" class="fas fa-video")
          p.fukidashi ミーティング
        span
          i(name="capture" id="talk-room-capture" class="far fa-square")
          p.fukidashi 画面キャプチャ
        span
          i(name="keep" id="talk-room-keep" class="far fa-bookmark")
          p.fukidashi Keep
        span
          i(name="notifiction-off" id="talk-room-notifiction-off" class="fas fa-volume-down")
          p.fukidashi 全ての通知をオフ
        span
          i(name="other" id="talk-room-other" class="fas fa-ellipsis-h")
          p.other-fukidashi.fukidashi 設定
          .user-other
            = link_to '設定', edit_user_path(current_user.id), :onclick=>"window.open(this.href, '設定', 'height=470, width=660');return false;"
            = link_to 'ヘルプ', '#'
            = link_to 'LINE情報', '#', class: 'LINE'
            = link_to 'ログアウト', destroy_user_session_path, method: :delete
            = link_to '終了', '#'

    .talk-room-index__talk-rooms
      .talk-rooms.tab-content.is-show
        .talk-rooms__search
          = render partial: "layouts/search"
        .result
        .talk-rooms-content
          = link_to talk_rooms_path, class: "user-talk-show", remote: true do
            .talk-rooms__my-information
              .talk-rooms__my-information--image
                = render partial: "users/attachment", locals: { user: current_user}
              .talk-rooms__my-information--name
                p = current_user.name
          .talk-rooms__list
            .talk-rooms__list--groups
              span.select-group-list グループ
              ul
                - @entry_room.each do |room|
                  li class="group-room"
                    = link_to talk_rooms_path(room_id: room.id), class: "user-talk-show", remote: true do
                      - if room.talk_room_image.attached?
                        = image_tag(room.talk_room_image)
                      - else
                        = image_tag('room.png')
                      p = room.room_name
            .talk-rooms__list--friends
              span.select-friends-list 友だち
              ul
                - current_user.followings.includes(:followings).each do |follower|
                  li class="follower"
                    = link_to talk_rooms_path(follower: follower.id), class: "user-talk-show", remote: true do
                      = render partial: 'users/attachment', locals: { user: follower}
                      p = follower.name

      .talk.tab-content
        .talk__search
        .talk__friends
          ul.talk__friends--list
            - @latest_talks.each do |talk|
              - talk_user = talk.users.where.not(id: current_user.id)
              li class="latest_talk talk-room-#{talk.id}"
                = link_to talk_rooms_path(follower: talk_user[0].id), class: "latest-talk-show", remote: true do
                  = render partial: 'users/attachment', locals: { user: talk_user[0]}
                  p.latest-talk-show__name-display
                    span.latest-talk-show__name-display--name = talk_user.last.name
                    span#latest-talk.latest-talk-show__name-display--display = talk.talk.last.talk
                  p.latest-talk-show__data-time-notifiction
                    span#data-time
                      / もしトークが今日の物ならば
                      - if Date.today == talk.talk.last.created_at.to_date
                        = talk.talk.last.created_at.strftime('%H:%M')
                      / もしトークが過去１週間ならば
                      - elsif 1.week.ago.beginning_of_day.to_date..Time.zone.now.end_of_day.to_date == talk.talk.last.created_at.to_date
                        - weeks = ["日","月","火","水","木","金","土"]
                        - num = talk.talk.last.created_at.strftime("%w").to_i
                        - week = weeks[num]
                        = week + "曜日"
                      / それ以降であれば
                      - else
                        = talk.talk.last.created_at.strftime("%Y.%M.%D")

      .add-friends.tab-content
        .add-friends__content
          .add-friends__content--search
            i.fas.fa-user-plus
            p 友だち検索
          .add-friends__content--create-group
            i.fas.fa-user-friends
            p = link_to 'グループ作成', new_talk_room_path, :onclick=>"window.open(this.href, 'グループ作成', 'height=500, width=450');return false;"
          .add-friends__content--create-open-chat
            i.far.fa-square
            p オープンチャット作成
        .add-friends__users
          .add-friends__users--official
            .official-account
              span.recommended-official おすすめ公式アカウント
              ul
          .add-friends__users--acquaintance
            .acquaintancers
              span.maybe-acquaintance 知り合いかも？
              ul
                - @users.each do |user|
                  - if user.followed_by?(current_user)
                  - else
                    li.acquaintance
                      = render partial: 'users/attachment', locals: { user: user}
                      p = user.name
                      = link_to user_relationships_path(user.id), method: :post do
                        i.fas.fa-user-plus
                        span.fukidashi 友だち追加

    .talk-room-index__talk
      .user-talks
        #talks.user-talks__talk
            = render partial: "users/user-talk-index", locals: { user: @user, room: @room, talks: @talks, room_name: @room_name}
